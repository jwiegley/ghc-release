
rebindable6.hs:106:17:
    No instance for (HasSeq (IO a -> t -> IO b))
      arising from a do statement
    Possible fix:
      add an instance declaration for (HasSeq (IO a -> t -> IO b))
    In a stmt of a 'do' expression: f
    In the expression:
      do { f;
           Just (b :: b) <- g;
           return b }
    In an equation for `test_do':
        test_do f g
          = do { f;
                 Just (b :: b) <- g;
                 return b }

rebindable6.hs:107:17:
    No instances for (HasFail ([Prelude.Char] -> t1),
                      HasBind (IO (Maybe b) -> (Maybe b -> t1) -> t))
      arising from a do statement
    Possible fix:
      add an instance declaration for
      (HasFail ([Prelude.Char] -> t1),
       HasBind (IO (Maybe b) -> (Maybe b -> t1) -> t))
    In a stmt of a 'do' expression: Just (b :: b) <- g
    In the expression:
      do { f;
           Just (b :: b) <- g;
           return b }
    In an equation for `test_do':
        test_do f g
          = do { f;
                 Just (b :: b) <- g;
                 return b }

rebindable6.hs:108:17:
    No instance for (HasReturn (b -> t1))
      arising from a use of `return'
    Possible fix: add an instance declaration for (HasReturn (b -> t1))
    In the expression: return b
    In a stmt of a 'do' expression: Just (b :: b) <- g
    In the expression:
      do { f;
           Just (b :: b) <- g;
           return b }
