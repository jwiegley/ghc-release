TH_pragma.hs:1:0:
    TH_pragma.hs:1:0: Splicing declarations
        [d| foo :: Int -> Int
            {-# NOINLINE foo #-}
            foo x = x + 1 |]
      ======>
        TH_pragma.hs:(4,3)-(6,25)
        foo :: GHC.Types.Int -> GHC.Types.Int
        {-# NOINLINE foo #-}
        foo x[] = (x[] `GHC.Num.+` 1)
TH_pragma.hs:1:0:
    TH_pragma.hs:1:0: Splicing declarations
        [d| bar :: (Num a) => a -> a
            {-# SPECIALIZE INLINE [~1] bar :: Float -> Float #-}
            bar x = x * 10 |]
      ======>
        TH_pragma.hs:(8,3)-(10,30)
        bar :: forall a[]. (GHC.Num.Num a[]) => a[] -> a[]
        {-# SPECIALIZE INLINE [~1] bar ::
                                     GHC.Types.Float -> GHC.Types.Float #-}
        bar x[] = (x[] `GHC.Num.*` 10)
