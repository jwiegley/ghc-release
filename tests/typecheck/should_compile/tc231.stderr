TYPE SIGNATURES
  foo ::
    forall s b chain.
    Zork s (Z [Char]) b =>
    Q s (Z [Char]) chain -> ST s ()
  s :: forall t t1. Q t (Z [Char]) t1 -> Q t (Z [Char]) t1
TYPE CONSTRUCTORS
  Q :: * -> * -> * -> *
  data Q s a chain
    No C type associated
    Roles: [representational, representational, representational]
    RecFlag NonRecursive, Promotable
    = Node :: s -> a -> chain -> Q s a chain Stricts: _ _ _
    FamilyInstance: none
  Z :: * -> *
  data Z a
    No C type associated
    Roles: [representational]
    RecFlag NonRecursive, Promotable
    = Z :: a -> Z a Stricts: _
    FamilyInstance: none
  Zork :: * -> * -> * -> Constraint
  class Zork s a b | a -> b
    Roles: [nominal, nominal, nominal]
    RecFlag NonRecursive
    huh :: Q s a chain -> ST s ()
COERCION AXIOMS
  axiom ShouldCompile.NTCo:Zork ::
      Zork s a b = forall chain. Q s a chain -> ST s ()
Dependent modules: []
Dependent packages: [base, ghc-prim, integer-gmp]
